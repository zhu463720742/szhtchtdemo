<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaotong.certified.dao.user.PermissionDao">
	<resultMap id="BaseResultMap" type="com.xiaotong.certified.bean.user.Permission">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="type" jdbcType="VARCHAR" property="type" />
		<result column="url" jdbcType="VARCHAR" property="url" />
		<result column="percode" jdbcType="VARCHAR" property="percode" />
		<result column="parentid" jdbcType="INTEGER" property="parentid" />
		<result column="sort" jdbcType="INTEGER" property="sort" />
		<result column="available" jdbcType="INTEGER" property="available" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name,type,url,percode,parentid,sort,available
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_permission
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		t_permission
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.xiaotong.certified.bean.user.Permission">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into t_permission
		(name,type,url,percode,parentid,sort,available
		)
		values
		(#{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
		#{url,jdbcType=VARCHAR}, #{percode,jdbcType=VARCHAR},
		#{parentid,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER},
		#{available,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.xiaotong.certified.bean.user.Permission">
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into t_permission
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="url != null">
				url,
			</if>
			<if test="percode != null">
				percode,
			</if>
			<if test="parentid != null">
				parentid,
			</if>
			<if test="sort != null">
				sort,
			</if>
			<if test="available != null">
				available,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="percode != null">
				#{percode,jdbcType=VARCHAR},
			</if>
			<if test="parentid != null">
				#{parentid,jdbcType=INTEGER},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=INTEGER},
			</if>
			<if test="available != null">
				#{available,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.xiaotong.certified.bean.user.Permission">
		update t_permission
		<set>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="percode != null">
				#{percode,jdbcType=VARCHAR},
			</if>
			<if test="parentid != null">
				#{parentid,jdbcType=INTEGER},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=INTEGER},
			</if>
			<if test="available != null">
				#{available,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.xiaotong.certified.bean.user.Permission">
		update
		t_permission
		set name = #{name,jdbcType=VARCHAR},
		type=#{type,jdbcType=VARCHAR},
		url = #{url,jdbcType=VARCHAR},
		percode = #{percode,jdbcType=VARCHAR},
		parentid = #{parentid,jdbcType=INTEGER},
		sort = #{sort,jdbcType=INTEGER},
		available = #{available,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="getPermissions" resultType="java.lang.String">
		SELECT tp.percode
		FROM
		t_user_role tur, t_user tu, t_role tr,t_permission tp,
		t_role_permission trp
		WHERE tur.user_id = tu.id
		AND tur.role_id = tr.id
		AND trp.role_id = tr.id
		AND trp.permission_id = tp.id
		AND tu.account =
		#{account,jdbcType=VARCHAR}
		AND tp.url=#{url,jdbcType=VARCHAR};
	</select>
</mapper>